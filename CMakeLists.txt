
CMAKE_MINIMUM_REQUIRED(VERSION 2.8) 

#==PROJECT (PRJ_NAME [C][CXX][JAVA])
PROJECT (EXC C) 

SET (CMAKE_C_COMPILER gcc)

SET(CMAKE_BUILD_TYPE Debug)
SET(CMAKE_C_FLAGS_DEBUG "$ENV{CFLAGS} -O0 -Wall -g -ggdb -DBUILD_TARGET=\"Debug\" -DDEBUG=1 -UCONFIG_CLOSE_DBG")
SET(CMAKE_C_FLAGS_RELEASE "$ENV{CFLAGS} -O3 -Wall -DNDEBUG -DBUILD_TARGET=\"Release\" -DCONFIG_CLOSE_DBG")

ADD_DEFINITIONS(-DCONFIG_EXC_DEVPLAT_LINUXGCC_32)
# ADD_DEFINITIONS(-DCONFIG_EXC_DEVPLAT_VC6)

# ADD_DEFINITIONS(-DXELOG_PREFIX=\"libEXC\")
# ADD_DEFINITIONS(-DCONFIG_USE_EXTERNAL_XELOG=1)
# ADD_DEFINITIONS(-DXELOG_2_LOCAL=1)
# ADD_DEFINITIONS(-DXELOG_2_REMOTE=1)


#::
SET( LIB_STATIC lib${PROJECT_NAME}.a )
SET( LIB_SHARED lib${PROJECT_NAME}.so )

MESSAGE(STATUS "This is static name " ${LIB_STATIC})
MESSAGE(STATUS "This is shared name " ${LIB_SHARED})
#==SET（VAR[VALUE] [CACHE TYPE DOCSTRING [FORCE]]）
#::define variate explicit
# SET(SRC_LIST test.c)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/lib)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib)
LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)

SET (EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
SET (LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR})


ADD_SUBDIRECTORY( src )
ADD_SUBDIRECTORY( test )


#==MESSAGE([SEND_ERROR | STATUS | FATAL_ERROR] "message to display" ...)
#::SEND_ERROR，产生错误，生成过程被跳过。
#::SATUS,输出前缀为-的信息。
#::FATAL_ERROR，立即终止所有cmake过程
# MESSAGE(STATUS "This is BINARY dir " ${TEST_BINARY_DIR})
# MESSAGE(STATUS "This is SOURCE dir " ${TEST_SOURCE_DIR})


#::
#==install==
# INSTALL(DIRECTORY include/ DESTINATION ${PROJECT_SOURCE_DIR}/release)
# INSTALL(DIRECTORY doc/ DESTINATION ${PROJECT_SOURCE_DIR}/release)
# INSTALL(DIRECTORY include DESTINATION ${PROJECT_SOURCE_DIR}/release)
# INSTALL(DIRECTORY doc DESTINATION ${PROJECT_SOURCE_DIR}/release)
# INSTALL(TARGETS ${LIB_STATIC} ${LIB_SHARED}
#   RUNTIME DESTINATION ${PROJECT_SOURCE_DIR}/
#   LIBRARY DESTINATION ${PROJECT_SOURCE_DIR}/lib
#   ARCHIVE DESTINATION ${PROJECT_SOURCE_DIR}/lib)
