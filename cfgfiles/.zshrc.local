#????? {{{
RPROMPT=$(echo '%{\033[31m%}%D %T%{\033[m%}')
PROMPT=$(echo '%{\033[34m%}%M%{\033[32m%}%/
%{\033[36m%}%n%{\033[01;33m%} >>> %{\033[m%}')
#}}}

#????????? {{{
#????????
export HISTSIZE=10000
#??????????????
export SAVEHIST=10000
#??????
#export HISTFILE=~/.zhistory
#????????????
setopt INC_APPEND_HISTORY
#???????????,??????????
setopt HIST_IGNORE_DUPS      
#??????????????      
setopt EXTENDED_HISTORY      

#?? cd ???????,cd -[TAB]??????
setopt AUTO_PUSHD
#????????????
setopt PUSHD_IGNORE_DUPS

#????????,?????????????
#setopt HIST_IGNORE_SPACE      
#}}}

#?????????????{{{
cd() {
    builtin cd "$@"                             # do actual cd
    fc -W                                       # write current history  file
    local HISTDIR="$HOME/.zsh_history$PWD"      # use nested folders for history
        if  [ ! -d "$HISTDIR" ] ; then          # create folder if needed
            mkdir -p "$HISTDIR"
        fi
        export HISTFILE="$HISTDIR/zhistory"     # set new history file
    touch $HISTFILE
    local ohistsize=$HISTSIZE
        HISTSIZE=0                              # Discard previous dir's history
        HISTSIZE=$ohistsize                     # Prepare for new dir's history
    fc -R                                       #read from current histfile
}
mkdir -p $HOME/.zsh_history$PWD
export HISTFILE="$HOME/.zsh_history$PWD/zhistory"

function allhistory { cat $(find $HOME/.zsh_history -name zhistory) }
function convhistory {
            sort $1 | uniq |
            sed 's/^:\([ 0-9]*\):[0-9]*;\(.*\)/\1::::::\2/' |
            awk -F"::::::" '{ $1=strftime("%Y-%m-%d %T",$1) "|"; print }'  
}
#?? histall ??????????
function histall { convhistory =(allhistory) |
            sed '/^.\{20\} *cd/i\\' }
#?? hist ??????????
function hist { convhistory $HISTFILE }

#?????? top44
function top44 { allhistory | awk -F':[ 0-9]*:[0-9]*;' '{ $1="" ; print }' | sed 's/ /\n/g' | sed '/^$/d' | sort | uniq -c | sort -nr | head -n 44 }

#}}}

#?? {{{
#????????????  ??:
#cmd #????
setopt INTERACTIVE_COMMENTS      
      
#???? cd,???????????
#??????,?? cd ????
#setopt AUTO_CD
      
      
#?? core dumps
limit coredumpsize 0

#Emacs?? ???
bindkey -e
#?? [DEL]? ?????
bindkey "\e[3~" delete-char

#????????????
WORDCHARS='*?_-[]~=&;!#$%^(){}<>'
#}}}

#?????? {{{
setopt AUTO_LIST
setopt AUTO_MENU
#?????,???????????
#setopt MENU_COMPLETE

autoload -U compinit
compinit

#??????
#zstyle ':completion::complete:*' use-cache on
#zstyle ':completion::complete:*' cache-path .zcache
#zstyle ':completion:*:cd:*' ignore-parents parent pwd

#??????
zstyle ':completion:*:match:*' original only
zstyle ':completion::prefix-1:*' completer _complete
zstyle ':completion:predict:*' completer _complete
zstyle ':completion:incremental:*' completer _complete _correct
zstyle ':completion:*' completer _complete _prefix _correct _prefix _match _approximate

#????
zstyle ':completion:*' expand 'yes'
zstyle ':completion:*' squeeze-shlashes 'yes'
zstyle ':completion::complete:*' '\\'

zstyle ':completion:*' menu select
zstyle ':completion:*:*:default' force-list always

#?????? 
eval $(dircolors -b) 
export ZLSCOLORS="${LS_COLORS}"
zmodload zsh/complist
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'

#????      
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

#kill ????      
compdef pkill=kill
compdef pkill=killall
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:*:*:*:processes' force-list always
zstyle ':completion:*:processes' command 'ps -au$USER'

#???????? 
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:descriptions' format $'\e[01;33m -- %d --\e[0m'
zstyle ':completion:*:messages' format $'\e[01;35m -- %d --\e[0m'
zstyle ':completion:*:warnings' format $'\e[01;31m -- No Matches Found --\e[0m'
#}}}

##??????? {{{
# Ctrl+@ ????,????????? region
zle_highlight=(region:bg=magenta #???? 
               special:bold      #????
               isearch:underline)#?????????
#}}}

##??(?????)?? cd {{{
user-complete(){
    if [[ -n $BUFFER ]] ; then
        zle expand-or-complete
    else
        BUFFER="cd "
        zle end-of-line
        zle expand-or-complete
    fi }
zle -N user-complete
bindkey "\t" user-complete
#}}}

##?????? sudo {{{
#???? 
sudo-command-line() {
    [[ -z $BUFFER ]] && zle up-history
    [[ $BUFFER != sudo\ * ]] && BUFFER="sudo $BUFFER"
#???????
    zle end-of-line
}
zle -N sudo-command-line
#??????: [Esc] [Esc]
bindkey "\e\e" sudo-command-line
#}}}
  
#???? {{{
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias ls='ls -F --color=auto'
alias ll='ls -l'
alias la='ls -a'
alias grep='grep --color=auto'
alias ee='emacsclient -t'

#[Esc][h] man ?????,?????? 
alias run-help >&/dev/null && unalias run-help
autoload run-help

#???? top10
alias top10='print -l  ${(o)history%% *} | uniq -c | sort -nr | head -n 10'
#}}}

#???? {{{
#?????????? cd ~xxx
hash -d WWW="/home/lighttpd/html"
hash -d ARCH="/mnt/arch"
hash -d PKG="/var/cache/pacman/pkg"
hash -d E="/etc/env.d"
hash -d C="/etc/conf.d"
hash -d I="/etc/rc.d"
hash -d X="/etc/X11"
hash -d BK="/home/r00t/config_bak"
#}}}
    
##for Emacs {{{
#? Emacs?? ??? Zsh ????? ???? Emacs ????
if [[ "$TERM" == "dumb" ]]; then
setopt No_zle
PROMPT='%n@%M %/
>>'
alias ls='ls -F'
fi 	
#}}}

####{{{
function timeconv { date -d @$1 +"%Y-%m-%d %T" }

zstyle ':completion:*:ping:*' hosts 129.27.2.3 www.tugraz.at \
       10.16.17.1{{7..9},}
# }}}


## END OF FILE #################################################################

