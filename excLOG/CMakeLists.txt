CMAKE_MINIMUM_REQUIRED(VERSION 2.6) 
PROJECT( excLOG )

SET (CMAKE_C_COMPILER gcc)

SET(CMAKE_BUILD_TYPE Debug) #Debug Release
SET(CMAKE_C_FLAGS_DEBUG "$ENV{CFLAGS} -O0 -Wall -g -ggdb -DDEBUG=1 -DCONFIG_CLOSE_DBG") 
SET(CMAKE_C_FLAGS_RELEASE "$ENV{CFLAGS} -O3 -Wall -DNDEBUG -DCONFIG_CLOSE_DBG")
# SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
# SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")

ADD_DEFINITIONS(-DCONFIG_EXC_DEVPLAT_LINUXGCC_32)
# ADD_DEFINITIONS(-DCONFIG_EXC_DEVPLAT_VC6)

ADD_DEFINITIONS(-DEXCLOG_PREFIX=\"libexcLOG\")
ADD_DEFINITIONS(-DCONFIG_USE_EXTERNAL_EXCLOG=1)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)

SET (EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
SET (LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR})

SET( LIB_LOCAL libexcLOG.a )
SET( LIB_REMOTE libexcLOG.so )

# SET (BUILD_TARGET local)
# SET (BUILD_TARGET remote)

MESSAGE(STATUS "build target:"${BUILD_TARGET})

IF(BUILD_TARGET STREQUAL local)
	ADD_DEFINITIONS(-DEXCLOG_2_LOCAL=1)
	ADD_SUBDIRECTORY( test_local )
ELSEIF(BUILD_TARGET STREQUAL remote)
	ADD_DEFINITIONS(-DEXCLOG_2_REMOTE=1)
	ADD_SUBDIRECTORY( test_remote )
ELSE()
	MESSAGE(FATAL_ERROR "cmake format: cmake path -DBUILD_TARGET=local/remote")	
ENDIF()

ADD_SUBDIRECTORY( src )
# ADD_SUBDIRECTORY( test_query )

# ADD_EXECUTABLE(target.bin ${SRC_LIST})


#==install==
# INSTALL(DIRECTORY include/ DESTINATION ${PROJECT_SOURCE_DIR}/release)
# INSTALL(DIRECTORY doc/ DESTINATION ${PROJECT_SOURCE_DIR}/release)
INSTALL(DIRECTORY include DESTINATION ${PROJECT_SOURCE_DIR}/release)
INSTALL(DIRECTORY doc DESTINATION ${PROJECT_SOURCE_DIR}/release)

